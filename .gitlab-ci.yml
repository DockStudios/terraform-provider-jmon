image: python:3.10

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/


test-docs:
  stage: test
  image: golang:1.20-bullseye
  cache:
    paths:
      - /usr/bin/tfplugindocs
  script: |
    # Install tfplugindocs
    if [ ! -f "/usr/bin/tfplugindocs/tfplugindocs" ]
    then
      mkdir /usr/bin/tfplugindocs
      apt-get update
      apt-get install wget unzip --assume-yes
      apt-get clean all
      pushd /usr/bin/tfplugindocs
        wget https://github.com/hashicorp/terraform-plugin-docs/releases/download/v0.16.0/tfplugindocs_0.16.0_linux_arm64.zip
        unzip tfplugindocs_0.16.0_linux_arm64.zip
      popd
    fi
    # Generate documentation
    /usr/bin/tfplugindocs/tfplugindocs generate
    # Check if there are any changes
    if [ "$(git diff | wc -l)" != "0" ]
    then
      echo Documentation needs re-generating
      exit 1
    fi

release:
  stage: deploy
  image: semantic-release:latest
  cache:
    paths:
      - node_modules/
  variables:
    GITLAB_TOKEN: $GITLAB_TOKEN
    GIT_STRATEGY: clone
  script:
    - semantic-release
  only:
    - main

stages:
 - build
 - test
 - deploy
